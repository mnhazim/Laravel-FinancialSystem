
"use strict";
var Charts = function() {
    var e, a = $('[data-toggle="chart"]'), t = "light", o = {
        base: "Open Sans"
    }, n = {
        gray: {
            100: "#f6f9fc",
            200: "#e9ecef",
            300: "#dee2e6",
            400: "#ced4da",
            500: "#adb5bd",
            600: "#8898aa",
            700: "#525f7f",
            800: "#32325d",
            900: "#212529"
        },
        theme: {
            default: "#172b4d",
            primary: "#5e72e4",
            secondary: "#f4f5f7",
            info: "#11cdef",
            success: "#2dce89",
            danger: "#f5365c",
            warning: "#fb6340"
        },
        black: "#12263F",
        white: "#FFFFFF",
        transparent: "transparent"
    };
    function r(e, a) {
        for (var t in a)
            "object" != typeof a[t] ? e[t] = a[t] : r(e[t], a[t])
    }
    function l(e) {
        var a = e.data("add")
          , t = $(e.data("target")).data("chart");
        e.is(":checked") ? function e(a, t) {
            for (var o in t)
                Array.isArray(t[o]) ? t[o].forEach(function(e) {
                    a[o].push(e)
                }) : e(a[o], t[o])
        }(t, a) : function e(a, t) {
            for (var o in t)
                Array.isArray(t[o]) ? t[o].forEach(function() {
                    a[o].pop()
                }) : e(a[o], t[o])
        }(t, a),
        t.update()
    }
    function i(e) {
        var a = e.data("update")
          , t = $(e.data("target")).data("chart");
        r(t, a),
        function(e, a) {
            if (void 0 !== e.data("prefix") || void 0 !== e.data("prefix")) {
                var r = e.data("prefix") ? e.data("prefix") : ""
                  , l = e.data("suffix") ? e.data("suffix") : "";
                a.options.scales.yAxes[0].ticks.callback = function(e) {
                    if (!(e % 10))
                        return r + e + l
                }
                ,
                a.options.tooltips.callbacks.label = function(e, a) {
                    var t = a.datasets[e.datasetIndex].label || ""
                      , o = e.yLabel
                      , n = "";
                    return 1 < a.datasets.length && (n += '<span class="popover-body-label mr-auto">' + t + "</span>"),
                    n += '<span class="popover-body-value">' + r + o + l + "</span>"
                }
            }
        }(e, t),
        t.update()
    }
    return window.Chart && r(Chart, (e = {
        defaults: {
            global: {
                responsive: !0,
                maintainAspectRatio: !1,
                defaultColor: n.gray[600],
                defaultFontColor: n.gray[600],
                defaultFontFamily: o.base,
                defaultFontSize: 13,
                layout: {
                    padding: 0
                },
                legend: {
                    display: !1,
                    position: "bottom",
                    labels: {
                        usePointStyle: !0,
                        padding: 16
                    }
                },
                elements: {
                    point: {
                        radius: 0,
                        backgroundColor: n.theme.primary
                    },
                    line: {
                        tension: .4,
                        borderWidth: 4,
                        borderColor: n.theme.primary,
                        backgroundColor: n.transparent,
                        borderCapStyle: "rounded"
                    },
                    rectangle: {
                        backgroundColor: n.theme.warning
                    },
                    arc: {
                        backgroundColor: n.theme.primary,
                        borderColor: n.white,
                        borderWidth: 4
                    }
                },
                tooltips: {
                    enabled: !1,
                    mode: "index",
                    intersect: !1,
                    custom: function(o) {
                        var e = $("#chart-tooltip");
                        if (e.length || (e = $('<div id="chart-tooltip" class="popover bs-popover-top" role="tooltip"></div>'),
                        $("body").append(e)),
                        0 !== o.opacity) {
                            if (o.body) {
                                var a = o.title || []
                                  , n = o.body.map(function(e) {
                                    return e.lines
                                })
                                  , r = "";
                                r += '<div class="arrow"></div>',
                                a.forEach(function(e) {
                                    r += '<h3 class="popover-header text-center">' + e + "</h3>"
                                }),
                                n.forEach(function(e, a) {
                                    o.labelColors[a].backgroundColor;
                                    var t = 1 < n.length ? "justify-content-left" : "justify-content-center";
                                    r += '<div class="popover-body d-flex align-items-center ' + t + '"><span class="badge badge-dot"><i class="bg-primary"></i></span>' + e + "</div>"
                                }),
                                e.html(r)
                            }
                            var t = $(this._chart.canvas)
                              , l = (t.outerWidth(),
                            t.outerHeight(),
                            t.offset().top)
                              , i = t.offset().left
                              , s = e.outerWidth()
                              , d = e.outerHeight()
                              , c = l + o.caretY - d - 16
                              , p = i + o.caretX - s / 2;
                            e.css({
                                top: c + "px",
                                left: p + "px",
                                display: "block",
                                "z-index": "100"
                            })
                        } else
                            e.css("display", "none")
                    },
                    callbacks: {
                        label: function(e, a) {
                            var t = a.datasets[e.datasetIndex].label || ""
                              , o = e.yLabel
                              , n = "";
                            return 1 < a.datasets.length && (n += '<span class="badge badge-primary mr-auto">' + t + "</span>"),
                            n += '<span class="popover-body-value">' + o + "</span>"
                        }
                    }
                }
            },
            doughnut: {
                cutoutPercentage: 83,
                tooltips: {
                    callbacks: {
                        title: function(e, a) {
                            return a.labels[e[0].index]
                        },
                        label: function(e, a) {
                            var t = "";
                            return t += '<span class="popover-body-value">' + a.datasets[0].data[e.index] + "</span>"
                        }
                    }
                },
                legendCallback: function(e) {
                    var o = e.data
                      , n = "";
                    return o.labels.forEach(function(e, a) {
                        var t = o.datasets[0].backgroundColor[a];
                        n += '<span class="chart-legend-item">',
                        n += '<i class="chart-legend-indicator" style="background-color: ' + t + '"></i>',
                        n += e,
                        n += "</span>"
                    }),
                    n
                }
            }
        }
    },
    Chart.scaleService.updateScaleDefaults("linear", {
        gridLines: {
            borderDash: [2],
            borderDashOffset: [2],
            color: n.gray[300],
            drawBorder: !1,
            drawTicks: !1,
            lineWidth: 0,
            zeroLineWidth: 0,
            zeroLineColor: n.gray[300],
            zeroLineBorderDash: [2],
            zeroLineBorderDashOffset: [2]
        },
        ticks: {
            beginAtZero: !0,
            padding: 10,
            callback: function(e) {
                if (!(e % 10))
                    return e
            }
        }
    }),
    Chart.scaleService.updateScaleDefaults("category", {
        gridLines: {
            drawBorder: !1,
            drawOnChartArea: !1,
            drawTicks: !1
        },
        ticks: {
            padding: 20
        },
        maxBarThickness: 10
    }),
    e)),
    a.on({
        change: function() {
            var e = $(this);
            e.is("[data-add]") && l(e)
        },
        click: function() {
            var e = $(this);
            e.is("[data-update]") && i(e)
        }
    }),
    {
        colors: n,
        fonts: o,
        mode: t
    }
}();
//# sourceMappingURL=_site_dashboard_free/assets/js/dashboard-free.js.map
